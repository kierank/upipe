sudo: required
dist: trusty
osx_image: xcode7.2
language: c

env:
  global:
    - MAKEFLAGS=-j2
    - FFMPEG="libavcodec-ffmpeg-dev libavformat-ffmpeg-dev libswresample-ffmpeg-dev libswscale-ffmpeg-dev"
    - APT_PACKAGES_COMMON="libev-dev libasound2-dev libx264-dev $FFMPEG"

matrix:
  include:

    - os: linux
      compiler: gcc-5
      env:
        - GCC_VERSION=5
        - APT_REPOS="ppa:ubuntu-toolchain-r/test ppa:mc3man/testing6"
        - APT_PACKAGES="gcc-$GCC_VERSION g++-$GCC_VERSION $APT_PACKAGES_COMMON"
        - HOST_CC=gcc-$GCC_VERSION
        - HOST_CXX=g++-$GCC_VERSION

    - os: linux
      compiler: gcc-m32
      env:
        - GCC_VERSION=5
        - APT_REPOS="ppa:ubuntu-toolchain-r/test ppa:mc3man/testing6"
        - APT_PACKAGES="gcc-$GCC_VERSION-multilib g++-$GCC_VERSION-multilib $(echo $APT_PACKAGES_COMMON | sed 's/\(\S*\)/\1:i386/g') libgl1-mesa-dev:i386 libglu1-mesa-dev:i386 libc6-dbg:i386"
        - HOST_CC="gcc-$GCC_VERSION -m32"
        - HOST_CXX="g++-$GCC_VERSION -m32"
        - CFLAGS="-msse2 -mfpmath=sse"
        - LIBAMT_PLATFORM="PLATFORM32=1"
        - PKG_CONFIG_LIBDIR="/usr/lib/i386-linux-gnu/pkgconfig"

    - os: linux
      compiler: clang-3.7
      env:
        - CLANG_VERSION=3.7
        - APT_REPOS="ppa:ubuntu-toolchain-r/test ppa:mc3man/testing6"
        - APT_PACKAGES="clang-$CLANG_VERSION $APT_PACKAGES_COMMON"
        - HOST_CC=clang-$CLANG_VERSION
        - HOST_CXX=clang++-$CLANG_VERSION
        - CFLAGS="-Wno-error=unused-function"

    - os: osx
      compiler: clang
      env:
        - HOST_CC=clang
        - HOST_CXX=clang++
        - CFLAGS="-Wno-error=unused-function -Wno-error=unused-command-line-argument"

before_install:
  - if type apt-get 2>/dev/null; then
      sudo dpkg --add-architecture i386;
      for APT_REPO in $APT_REPOS; do
        sudo add-apt-repository -y $APT_REPO;
      done;
      if [ "$CLANG_VERSION" ]; then
        curl -sSL "http://llvm.org/apt/llvm-snapshot.gpg.key" |
          sudo -E apt-key add -;
        sudo add-apt-repository -y "deb
          http://llvm.org/apt/trusty/
          llvm-toolchain-trusty-$CLANG_VERSION
          main";
      fi;
      sudo apt-get update;
      sudo apt-get install -y
        valgrind
        libc6:i386
        $APT_PACKAGES;
      sudo apt-get remove -y
        libqtwebkit-dev;
    fi
  - if type brew 2>/dev/null; then
      brew update;
      brew install valgrind;
      brew install libev;
      brew install yasm;
      brew install x264;
      wget -O /usr/local/Library/Formula/ffmpeg.rb
        "https://raw.githubusercontent.com/Homebrew/homebrew-core/7c988bdb8ffb9d2ffcce7606a43e360d98e4982c/Formula/ffmpeg.rb";
      brew install ffmpeg;
    fi

  # bitstream
  - git clone --depth 1 git://git.videolan.org/bitstream.git
  - sudo make -C bitstream install

  # nacl sdk
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      wget http://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/nacl_sdk.zip;
      unzip nacl_sdk.zip;
      nacl_sdk/naclsdk update pepper_49;
    fi

  # libamt
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      git clone --depth 1 https://github.com/cisco/SSMAMTtools.git;
      make -C SSMAMTtools/build/linux
        CC="$HOST_CC -fPIC"
        TARGET=libamt.a
        $LIBAMT_PLATFORM;
      sudo install -D SSMAMTtools/include/amt.h /usr/local/include/amt.h;
      sudo install -D SSMAMTtools/lib/linux/libamt.a /usr/local/lib/libamt.a;
      sudo ldconfig;
    fi

  # disable valgrind on os x
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      export DISABLE_VALGRIND=1;
    fi

before_script: autoreconf -i

script: CONFIGURE_FLAGS="--disable-silent-rules
          CC=\"$HOST_CC\"
          CXX=\"$HOST_CXX\"
          CPPFLAGS=\"-I$PWD/nacl_sdk/pepper_49/include\"
          CFLAGS=\"-Werror -Wno-error=deprecated-declarations -O2 -g $CFLAGS\"
          CXXFLAGS=\"-Werror -O2 -g\"" &&
        eval ./configure $CONFIGURE_FLAGS &&
        make distcheck
          DISTCHECK_CONFIGURE_FLAGS="$CONFIGURE_FLAGS"
          TEST_SUITE_LOG="$PWD/tests.log"

after_failure:
  - test -r config.log && cat config.log
  - test -r tests.log && cat tests.log

notifications:
  irc:
    channels:
      - "chat.freenode.net#upipe"
    on_success: never
    on_failure: always
    use_notice: true
    skip_join: true
